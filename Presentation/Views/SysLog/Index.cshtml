@model ViewListModel<BaseFilter>
@{
    var langEnum = User.GetLoggedInUserLanguageEnum();
    ViewData["Title"] = SysExpressionHelper.Get(langEnum, ExpressionTypes.SysLog, SysLogExpression.SysLogs.ToInt());
    ViewData["Icon"] = "fas fa-user-secret";
    ViewData["Filter"] = Model.Filter;
    ViewData["CurrentMenu"] = SysExpressionHelper.Get(langEnum, ExpressionTypes.SysMenu, SysMenuExpression.AuditLogs.ToInt());

    var locked_lable = SysExpressionHelper.Get(langEnum, ExpressionTypes.BaseEntity, BaseEntityExpression.Locked.ToInt());
    var Change_Status_lable = SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Change_Status.ToInt());
    var Inactive_lable = SysExpressionHelper.Get(langEnum, ExpressionTypes.BaseEntity, BaseEntityExpression.Inactive.ToInt());
    var Detail_lable = SysExpressionHelper.Get(langEnum, ExpressionTypes.SysLog, SysLogExpression.Detail.ToInt());
    var User_TimeZone = User.GetLoggedInUserTimezoneId();
}
<section class="content pt-3">
    <div class="container-fluid">
        @if (!Model.Filter.IsNullOrEmpty())
        {
            <div class="card card-light custom-filter-header">
                <div class="card-header advanced-search-header">
                    @foreach (var item in @Model.Filter.GetFields())
                    {
                        if (item.GetValue(Model.Filter) != null)
                        {
                            if (item.PropertyType == typeof(bool) || item.PropertyType == typeof(Nullable<bool>))
                            {
                                <a onclick="clean_filter(event,'@item.Name')" class="badge badge-light text-xs text-dark text-bold">
                                    @item.GetLable(langEnum,ExpressionTypes.BaseEntity)
                                    :
                                    @((item.GetValue(Model.Filter) as bool?) == true ? SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Yes.ToInt()) : SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.No.ToInt()))
                                    <span class="text-danger ml-2"><em class="fa fa-times"></em></span>
                                </a>
                            }
                            else if (item.PropertyType == typeof(DateTime) || item.PropertyType == typeof(Nullable<DateTime>))
                            {
                                <a onclick="clean_filter(event,'@item.Name')" class="badge badge-light text-xs text-dark text-bold">
                                    @item.GetLable(langEnum,ExpressionTypes.BaseEntity)
                                    :
                                    @((item.GetValue(Model.Filter) as DateTime?).Value.ToShortDateString())
                                    <span class="text-danger ml-2"><em class="fa fa-times"></em></span>
                                </a>
                            }
                        }
                    }

                    <a style="float:right" href="#" onclick="clear_all_filter()" title="@SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Clear_All_Filters.ToInt())" class="ml-3">
                        <em class="fas fa-trash mr-1"></em>
                    </a>
                </div>
            </div>
        }
        <div class="row">
            <div class="col-12">
                <div class="card card-dark">
                    <div class="card-body">
                        <a class="btn btn-danger btn-advanced-search" data-widget="control-sidebar" data-slide="true" href="#" role="button">
                            <em class="fa fa-search mr-2"> </em>
                            @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Advanced_Search.ToInt())
                        </a>
                        <table id="CustomDataTable" summary="forLog" class="table table-bordered table-striped"
                               data-api="SysLog/GetData">
                            <thead>
                                <tr>
                                    <th id="CreatedAtColumn">
                                        @SysExpressionHelper.Get(langEnum, ExpressionTypes.SysLog, SysLogExpression.EntityName.ToInt())
                                    </th>
                                    <th id="EntityNameColumn" class="colvis">
                                        @SysExpressionHelper.Get(langEnum, ExpressionTypes.BaseEntity, BaseEntityExpression.CreatedAt.ToInt())
                                    </th>
                                    <th id="CreatedAtColumn">
                                        @SysExpressionHelper.Get(langEnum, ExpressionTypes.SysLog, SysLogExpression.EntityId.ToInt())
                                    </th>
                                    <th id="CrudTypeColumn" class="colvis">
                                        @SysExpressionHelper.Get(langEnum, ExpressionTypes.SysLog, SysLogExpression.CrudType.ToInt())
                                    </th>
                                    <th id="CreatedByColumn">
                                        @SysExpressionHelper.Get(langEnum, ExpressionTypes.BaseEntity, BaseEntityExpression.CreatedBy.ToInt())
                                    </th>
                                </tr>
                            </thead>

                        </table>

                        @await Html.PartialAsync("_Empty", "CustomDataTable_empty")

                    </div>
                    <div class="card-footer">
                        <a href="#" title="@SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Help.ToInt())">
                            <em class="fa fa-info-circle"></em>
                        </a>
                        <a href="#" title="@SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Faq.ToInt())" class="ml-2">
                            <em class="fa fa-question-circle"></em>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<aside class="control-sidebar control-sidebar-dark text-sm" style="overflow:auto">
    <form asp-action="Index">
        <input type="hidden" asp-for="Filter.ClearAll" class="filter" id="Filter_ClearAll" />
        <input type="hidden" asp-for="Filter.ItemRemoved" class="filter" id="Filter_ItemRemoved" />
        <div class="row" style="margin:10px;">
            <div class="row">
                <div class="col-12 pt-3 text-center">
                    <h4>
                        <em class="fa fa-search"></em>
                        @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Advanced_Search.ToInt())
                    </h4>
                    <hr />
                </div>
                <div class="col-md-12">
                    <div class="row">
                        @foreach (var item in @Model.Filter.GetFields().OrderBy(o => o.PropertyType.FullName).ThenBy(o => o.Name))
                        {
                            if (item.PropertyType == typeof(bool) || item.PropertyType == typeof(Nullable<bool>))
                            {
                                var value = (item.GetValue(Model.Filter) as bool?);
                                <div class="col-12 mt-2">
                                    <div class="form-group">
                                        <label class="control-label mb-0 ml-2" for="Filter_@item.Name">
                                            @item.GetLable(langEnum,ExpressionTypes.BaseEntity)
                                        </label>
                                        <select asp-for="@value" id="Filter_@item.Name" name="Filter.@item.Name" class="form-control">
                                            <option selected="selected" value="">
                                                @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Please_Select.ToInt())
                                            </option>
                                            <option value="true">
                                                @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Yes.ToInt())
                                            </option>
                                            <option value="false">
                                                @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.No.ToInt())
                                            </option>
                                        </select>
                                    </div>
                                </div>
                            }
                            else if (item.PropertyType == typeof(DateTime) || item.PropertyType == typeof(Nullable<DateTime>))
                            {
                                var value = (item.GetValue(Model.Filter) as DateTime?);
                                <div class="col-12 mt-2">
                                    <div class="form-group">
                                        <label class="control-label mb-0 ml-2" for="Filter_@item.Name">
                                            @item.GetLable(langEnum,ExpressionTypes.BaseEntity)
                                        </label>
                                        <input asp-for="@value" id="Filter_@item.Name" name="Filter.@item.Name" class="form-control" type="date" />
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
                <div class="col-md-6 mt-4">
                    <div class="form-group">
                        <button id="searchButton" type="submit" class="btn btn-info btn-block">
                            <em class="fas fa-search"></em>
                            @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Search.ToInt())
                        </button>
                    </div>
                </div>
                <div class="col-md-6 mt-4">
                    <div class="form-group">
                        <a class="btn btn-danger btn-block" data-widget="control-sidebar" data-slide="true" href="#" role="button">
                            <em class="fa fa-times"> </em>
                            @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Close.ToInt())
                        </a>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="form-group">
                        @if (!Model.Filter.IsNullOrEmpty())
                        {
                            <a title="@SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Clear_All_Filters.ToInt())" onclick="clear_all_filter()" class="btn btn-secondary btn-block">
                                <em class="fas fa-trash mr-2"></em>
                                @SysExpressionHelper.Get(langEnum, ExpressionTypes.General, GeneralExpression.Clear_All_Filters.ToInt())
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </form>
</aside>

<script>
    let columns = [
        {
            data: 'EntityName',
            searchable: true,
            render: function (data, type, item, meta) {
                if (type !== 'display')
                    return data;

                return `<a title="@Detail_lable" class="text-dark mr-2" href="/SysLog/Detail/${item.Id}"><span class="fas fa-eye"></span></a>${item.EntityName}`;
            },
        },
        { data: "CreatedAtText" },
        { data: "EntityId" },
        { data: "CrudTypeText" },
        { data: "CreatedBy", },
    ];

</script>
