 using ApplicationCore.DomainModel; using System.Reflection;  namespace Infrastructure.Helpers;  public static class SysParameterHelper {     public static List<SysParameterModel> Items = new();     public static string Get(Language language, ParameterTypes parameterType, int parameterItem)     {         //Todo: Change Unknown and handle it         return Items?.FirstOrDefault(s => s.ParameterType == parameterType &&                                                   s.ParameterItem == parameterItem &&                                                   s.Language == language)?.Equivalent ?? "Unknown";     }      public static List<SysParameterModel> GetAll(Language language, ParameterTypes parameterType)                          => Items.Where(s => s.ParameterType == parameterType && s.Language == language).ToList();      public static string Get(Language language,                              ParameterTypes parameterType,                              int parameterItem,                              Dictionary<string, object> replacements)                          => Get(language, parameterType, parameterItem).Replace(replacements);       public static string Get(Language language,                              ParameterTypes parameterType,                              int parameterItem,                              (string key, object value) replacement)                          => Get(language, parameterType, parameterItem).Replace(new[] { replacement }.ToDictionary(kvp => kvp.key, kvp => kvp.value));      public static string FindPureName(ParameterTypes parameterType, int parameterItem)     {         var relatedEnum = typeof(ParameterTypes).GetField(parameterType.ToString())?.GetCustomAttribute<RelatedEnum>();         return Enum.Parse(relatedEnum.EnumType, parameterItem.ToString())?.ToString() ?? "Wrong";     }  }